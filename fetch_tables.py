# import re
# from parse import *
# import sqlparse

query = """create or replace view POWERDB.PDMART.BASIS_MACRO_ANALYSIS_VW(
	BU_ISO_LONG,
	BU_ISO_SHORT,
	BU_CONTRACT,
	BU_PNODE_LONG,
	BU_PNODE_SHORT,
	LIQUID_YN,
	MARKET_DATE,
	MARKET_HE,
	BU_PEAKTYPE,
	BU_ZONE_BU_PNODE_LONG,
	SNK_DA_LMP,
	SNK_DA_MCC,
	SNK_DA_MLC,
	SNK_RT_LMP,
	SNK_RT_MCC,
	SNK_RT_MLC,
	SNK_ICEGASHUB,
	SNK_ICEGASHUB_PRICE,
	SNK_SECONDARY_ICEGASHUB,
	SNK_SECONDARY_ICEGASHUB_PRICE,
	BU_ZONE_BU_PNODE_SHORT,
	SRC_DA_LMP,
	SRC_DA_MCC,
	SRC_DA_MLC,
	SRC_RT_LMP,
	SRC_RT_MCC,
	SRC_RT_MLC,
	SRC_ICEGASHUB,
	SRC_ICEGASHUB_PRICE,
	SRC_SECONDARY_ICEGASHUB,
	SRC_SECONDARY_ICEGASHUB_PRICE,
	SNK_DA_ISO_LOAD,
	SNK_RT_ISO_LOAD,
	SNK_RT_ISO_GEN_WIND,
	SNK_DA_ISO_GEN_WIND,
	SRC_DA_ISO_LOAD,
	SRC_RT_ISO_LOAD,
	SRC_RT_ISO_GEN_WIND,
	SRC_DA_ISO_GEN_WIND,
	ISO_AGG_OBS_TEMP,
	SNK_WEATHER_TEMPERATURE_ACTUAL,
	SRC_WEATHER_TEMPERATURE_ACTUAL,
	RT_MISO_GEN_WIND,
	DA_MISO_GEN_WIND,
	PBM_DART,
	FLOW_MONTH_FW,
	TRADE_DATE,
	ICE_BASIS_FM,
	NEX_BASIS_FM,
	FLOW_MONTH_Y1,
	TRADE_DATE_Y1,
	ICE_BASIS_Y1,
	NEX_BASIS_Y1,
	BASIS_DA_LMP,
	BASIS_DA_MCC,
	BASIS_DA_MLC,
	BASIS_RT_LMP,
	BASIS_RT_MCC,
	BASIS_RT_MLC,
	BASIS_ICEGASHUB_PRICE_SPREAD,
	BASIS_SECONDARY_ICEGASHUB_PRICE_SPREAD,
	FTR_LTP_FM,
	FTR_LTP_Y1,
	SNK_LOAD_ZONE,
	SRC_LOAD_ZONE,
	IIR_ACTUAL_GAS_GEN_OUTAGE,
	IIR_ACTUAL_COAL_GEN_OUTAGE,
	IIR_ACTUAL_OIL_GEN_OUTAGE,
	IIR_ACTUAL_NUCLEAR_GEN_OUTAGE,
	IIR_ACTUAL_HYDRO_GEN_OUTAGE,
	IIR_ACTUAL_WIND_GEN_OUTAGE,
	IIR_ACTUAL_SOLAR_GEN_OUTAGE,
	IIR_ACTUAL_TOTAL_GEN_OUTAGE,
	ISO_GAS_GEN_OBS,
	ISO_COAL_GEN_OBS,
	ISO_HYDRO_GEN_OBS,
	ISO_NUCLEAR_GEN_OBS,
	ISO_OIL_GEN_OBS,
	ISO_TOTAL_GEN_OBS
) as
(
    WITH BPB AS (SELECT DISTINCT  BU_ISO_LONG,BU_ISO_SHORT,BU_CONTRACT,BU_PNODE_LONG,BU_PNODE_SHORT,LIQUID_YN FROM POWERDB.PDIM.BU_POWER_BASIS 
                 where BU_ISO_LONG||'_'||BU_ISO_SHORT in ('PJMISO_PJMISO','NYISO_PJMISO') and LIQUID_YN is not null),
    IHH AS
    (
    SELECT DISTINCT BU_ISO,BU_PEAKTYPE,MARKET_DATE,MARKET_HE,HUB_PNODE AS BU_PNODE,BU_ZONE,DA_LMP,DA_CONG DA_MCC,DA_LOSS AS DA_MLC,RT_LMP AS RT_LMP,RT_CONG AS RT_MCC,RT_LOSS AS RT_MLC,
      DA_ISO_LOAD AS DA_ISO_LOAD,RT_ISO_LOAD AS RT_ISO_LOAD,ICEGASHUB,ICEGASHUB_PRICE AS ICEGASHUB_PRICE,SECONDARY_ICEGASHUB,SECONDARY_ICEGASHUB_PRICE AS SECONDARY_ICEGASHUB_PRICE,RT_ISO_GEN_WIND as RT_ISO_GEN_WIND,DA_ISO_GEN_WIND as DA_ISO_GEN_WIND,TEMP_ISO_AGG_OBS as iso_agg_obs_temp,RT_TEMP_ACTUAL as weather_temperature_actual
      ,ZONAL_LOAD_RT_OBS,IIR_ACTUAL_GAS_GEN_OUTAGE,IIR_ACTUAL_COAL_GEN_OUTAGE,IIR_ACTUAL_OIL_GEN_OUTAGE,IIR_ACTUAL_NUCLEAR_GEN_OUTAGE,IIR_ACTUAL_HYDRO_GEN_OUTAGE,IIR_ACTUAL_WIND_GEN_OUTAGE,IIR_ACTUAL_SOLAR_GEN_OUTAGE,IIR_ACTUAL_TOTAL_GEN_OUTAGE
      ,ISO_GAS_GEN_OBS,ISO_COAL_GEN_OBS,ISO_HYDRO_GEN_OBS,ISO_NUCLEAR_GEN_OBS,ISO_OIL_GEN_OBS,ISO_TOTAL_GEN_OBS
      FROM POWERDB.PDMART.ISO_HUB_HOURLY
      WHERE MARKET_DATE>='2014-01-01'
      --GROUP BY BU_ISO,BU_PEAKTYPE,MARKET_DATE,HUB_PNODE,ICEGASHUB,BU_ZONE
union all
    SELECT DISTINCT BU_ISO,'24HR' as BU_PEAKTYPE,MARKET_DATE,MARKET_HE,HUB_PNODE AS BU_PNODE,BU_ZONE,DA_LMP,DA_CONG DA_MCC,DA_LOSS AS DA_MLC,RT_LMP AS RT_LMP,RT_CONG AS RT_MCC,RT_LOSS AS RT_MLC,
      DA_ISO_LOAD AS DA_ISO_LOAD,RT_ISO_LOAD AS RT_ISO_LOAD,ICEGASHUB,ICEGASHUB_PRICE AS ICEGASHUB_PRICE,SECONDARY_ICEGASHUB,SECONDARY_ICEGASHUB_PRICE AS SECONDARY_ICEGASHUB_PRICE,RT_ISO_GEN_WIND as RT_ISO_GEN_WIND,DA_ISO_GEN_WIND as DA_ISO_GEN_WIND,TEMP_ISO_AGG_OBS as iso_agg_obs_temp,RT_TEMP_ACTUAL as weather_temperature_actual
      ,ZONAL_LOAD_RT_OBS,IIR_ACTUAL_GAS_GEN_OUTAGE,IIR_ACTUAL_COAL_GEN_OUTAGE,IIR_ACTUAL_OIL_GEN_OUTAGE,IIR_ACTUAL_NUCLEAR_GEN_OUTAGE,IIR_ACTUAL_HYDRO_GEN_OUTAGE,IIR_ACTUAL_WIND_GEN_OUTAGE,IIR_ACTUAL_SOLAR_GEN_OUTAGE,IIR_ACTUAL_TOTAL_GEN_OUTAGE
      ,ISO_GAS_GEN_OBS,ISO_COAL_GEN_OBS,ISO_HYDRO_GEN_OBS,ISO_NUCLEAR_GEN_OBS,ISO_OIL_GEN_OBS,ISO_TOTAL_GEN_OBS
      FROM POWERDB.PDMART.ISO_HUB_HOURLY
      WHERE MARKET_DATE>='2014-01-01' and bu_iso in ('PJMISO','NYISO') and  hub_pnode in ('HUD VL','WESTERN HUB','N.Y.C.')
      ),
    --LATEST TRADED PRICES FOR NEXT 11 MONTHS
    PBM_FW AS ( 
      select a.BU_ISO_LONG,a.BU_ISO_SHORT,BU_CONTRACT,PEAK_TYPE,DART_FLAG,TRADE_DATE,FLOW_MONTH,ICE_LONG-ICE_SHORT AS ICE_BASIS_FM,NEX_LONG-NEX_SHORT AS NEX_BASIS_FM,FTR_LTP_LONG-FTR_LTP_SHORT AS FTR_LTP_FM 
      FROM POWERDB.PDMART.POWER_BASIS_MONTHLY A ,
        (SELECT BU_ISO_LONG,BU_ISO_SHORT, MAX(TRADE_DATE) TRADE_DATE_F FROM POWERDB.PDMART.POWER_BASIS_MONTHLY group by BU_ISO_LONG,BU_ISO_SHORT ) B
        WHERE a.BU_ISO_LONG=b.BU_ISO_LONG and b.BU_ISO_SHORT=b.BU_ISO_SHORT and a.TRADE_DATE=b.TRADE_DATE_F
      AND FLOW_MONTH<=DATEADD(month,11,current_date) 
    ),
    --LAST YEARS TRADED PRICES FOR LAST YEAR SPREADS. E.G IF TODAY IS 7/29/2020 THEN WE ARE TRYING TO SEE 7/29/2019 PRICES FOR THE PERIOD 7/1/2019 TO 6/1/2020
    PBM_HIST AS (
      select a.BU_ISO_LONG,a.BU_ISO_SHORT,BU_CONTRACT,PEAK_TYPE,DART_FLAG,TRADE_DATE,FLOW_MONTH,ICE_LONG-ICE_SHORT AS ICE_BASIS_FM,NEX_LONG-NEX_SHORT AS NEX_BASIS_FM,FTR_LTP_LONG-FTR_LTP_SHORT AS FTR_LTP_Y1 
      FROM POWERDB.PDMART.POWER_BASIS_MONTHLY A,
      (SELECT BU_ISO_LONG,BU_ISO_SHORT, MAX(TRADE_DATE) TRADE_DATE_F FROM POWERDB.PDMART.POWER_BASIS_MONTHLY
                           WHERE TRADE_DATE<=DATEADD(YEAR,-1,CURRENT_DATE) group by BU_ISO_LONG,BU_ISO_SHORT ) B
        WHERE a.BU_ISO_LONG=b.BU_ISO_LONG and b.BU_ISO_SHORT=b.BU_ISO_SHORT and a.TRADE_DATE=b.TRADE_DATE_F
      AND FLOW_MONTH>=DATEADD(YEAR,-1,DATE_TRUNC(MONTH,CURRENT_DATE)) AND FLOW_MONTH<=DATEADD(month,11,DATEADD(YEAR,-1,DATE_TRUNC(MONTH,CURRENT_DATE)))
    ),
    --taking MISO wind as MISO wind can impact power spreads AD/NI,WH/NI and other NI hub spreads
    MISO_WIND as 
    (
      select DISTINCT MARKET_DATE,MARKET_HE,BU_PEAKTYPE,RT_ISO_GEN_WIND AS RT_MISO_GEN_WIND,DA_ISO_GEN_WIND AS DA_MISO_GEN_WIND 
      FROM POWERDB.PDMART.ISO_HUB_HOURLY WHERE BU_ISO='MISO' )

      --GROUP BY MARKET_DATE,BU_PEAKTYPE

    --TAKING IN THE BU_ZONE TABLE TO GET YES_LOAD_ZONES
    --ZONE_MAP AS
    --(SELECT DISTINCT BU_ISO,BU_ZONE,ZONE_NAME,YES_ZONE,ISO_ZONE_PNODE,YES_LOAD_ZONE
      --FROM POWERDB.PDIM.BU_ZONE WHERE BU_ISO='PJMISO'
               --  ),
    --GETTING ZONAL LOADS 
    --ZONAL_LOAD AS
    --(

    --select * from "POWERDB"."YESDS"."ISO_DART_LOADS_OBS_HOURLY_VW"
    --  WHERE ISO='PJMISO'
    --)

    SELECT DISTINCT BPB.*,--THERE ARE SOME DUPLICATES HERE..WILL LOOK INTO THIS AFTER NOVEMBER AUCTIONS-NEMO
    SNK.MARKET_DATE,
    SNK.MARKET_HE,
    SNK.BU_PEAKTYPE,
    SNK.BU_ZONE AS BU_ZONE_BU_PNODE_LONG,
    --SNK_ZMAP.YES_LOAD_ZONE AS SNK_YES_LOAD_ZONE,
    SNK.DA_LMP AS SNK_DA_LMP,
    SNK.DA_MCC AS SNK_DA_MCC,
    SNK.DA_MLC AS SNK_DA_MLC,
    SNK.RT_LMP AS SNK_RT_LMP,
    SNK.RT_MCC AS SNK_RT_MCC,
    SNK.RT_MLC AS SNK_RT_MLC,
    SNK.ICEGASHUB AS SNK_ICEGASHUB,
    SNK.ICEGASHUB_PRICE AS SNK_ICEGASHUB_PRICE,
	SNK.SECONDARY_ICEGASHUB AS SNK_SECONDARY_ICEGASHUB,
    SNK.SECONDARY_ICEGASHUB_PRICE AS SNK_SECONDARY_ICEGASHUB_PRICE,
    SRC.BU_ZONE AS BU_ZONE_BU_PNODE_SHORT,
    --SRC_ZMAP.YES_LOAD_ZONE AS SRC_YES_LOAD_ZONE,
    SRC.DA_LMP AS SRC_DA_LMP,
    SRC.DA_MCC AS SRC_DA_MCC,
    SRC.DA_MLC AS SRC_DA_MLC,
    SRC.RT_LMP AS SRC_RT_LMP,
    SRC.RT_MCC AS SRC_RT_MCC,
    SRC.RT_MLC AS SRC_RT_MLC,
	SRC.ICEGASHUB AS SRC_ICEGASHUB,
    SRC.ICEGASHUB_PRICE AS SRC_ICEGASHUB_PRICE,
	SRC.SECONDARY_ICEGASHUB AS SRC_SECONDARY_ICEGASHUB,
    SRC.SECONDARY_ICEGASHUB_PRICE AS SRC_SECONDARY_ICEGASHUB_PRICE,
    SNK.DA_ISO_LOAD as SNK_DA_ISO_LOAD, 
    SNK.RT_ISO_LOAD as SNK_RT_ISO_LOAD,
    SNK.RT_ISO_GEN_WIND as SNK_RT_ISO_GEN_WIND,  
    SNK.DA_ISO_GEN_WIND as SNK_DA_ISO_GEN_WIND,
    SRC.DA_ISO_LOAD as SRC_DA_ISO_LOAD,
    SRC.RT_ISO_LOAD as SRC_RT_ISO_LOAD,
    SRC.RT_ISO_GEN_WIND as SRC_RT_ISO_GEN_WIND,
    SRC.DA_ISO_GEN_WIND as SRC_DA_ISO_GEN_WIND,
    --SNK_LOAD.RTLOAD AS SNK_RT_LOAD,
    --SNK_LOAD.DALOAD AS SNK_DA_LOAD,
    --SRC_LOAD.RTLOAD AS SRC_RT_LOAD,
    --SRC_LOAD.DALOAD AS SRC_DA_LOAD,
    SNK.iso_agg_obs_temp,
    SNK.weather_temperature_actual AS SNK_WEATHER_TEMPERATURE_ACTUAL,
    SRC.weather_temperature_actual AS SRC_WEATHER_TEMPERATURE_ACTUAL,
    MISO_WIND.RT_MISO_GEN_WIND,
    MISO_WIND.DA_MISO_GEN_WIND,
    pbm.dart_FLAG as pbm_dart,
    pbm.flow_month as FLOW_MONTH_FW,
    PBM.TRADE_DATE,
    PBM.ICE_BASIS_FM,
    PBM.NEX_BASIS_FM,
    pbm_HIST.flow_month as FLOW_MONTH_Y1,
    PBM_HIST.TRADE_DATE AS TRADE_DATE_Y1,
    PBM_HIST.ICE_BASIS_FM AS ICE_BASIS_Y1,
    PBM_HIST.NEX_BASIS_FM AS NEX_BASIS_Y1,
    SNK_DA_LMP-SRC_DA_LMP AS BASIS_DA_LMP,
    SNK_DA_MCC-SRC_DA_MCC AS BASIS_DA_MCC,
    SNK_DA_MLC-SRC_DA_MLC AS BASIS_DA_MLC,
    SNK_RT_LMP-SRC_RT_LMP AS BASIS_RT_LMP,
    SNK_RT_MCC-SRC_RT_MCC AS BASIS_RT_MCC,
    SNK_RT_MLC-SRC_RT_MLC AS BASIS_RT_MLC,
    SNK_ICEGASHUB_PRICE-SRC_ICEGASHUB_PRICE AS BASIS_ICEGASHUB_PRICE_SPREAD,
	SNK_SECONDARY_ICEGASHUB_PRICE-SRC_SECONDARY_ICEGASHUB_PRICE AS BASIS_SECONDARY_ICEGASHUB_PRICE_SPREAD,
    PBM.FTR_LTP_FM,
    PBM_HIST.FTR_LTP_Y1,
    SNK.ZONAL_LOAD_RT_OBS AS SNK_LOAD_ZONE,
    SRC.ZONAL_LOAD_RT_OBS AS SRC_LOAD_ZONE,
    SNK.IIR_ACTUAL_GAS_GEN_OUTAGE,
    SNK.IIR_ACTUAL_COAL_GEN_OUTAGE,
    SNK.IIR_ACTUAL_OIL_GEN_OUTAGE,
    SNK.IIR_ACTUAL_NUCLEAR_GEN_OUTAGE,
    SNK.IIR_ACTUAL_HYDRO_GEN_OUTAGE,
    SNK.IIR_ACTUAL_WIND_GEN_OUTAGE,
    SNK.IIR_ACTUAL_SOLAR_GEN_OUTAGE,
    SNK.IIR_ACTUAL_TOTAL_GEN_OUTAGE,
    SNK.ISO_GAS_GEN_OBS,
    SNK.ISO_COAL_GEN_OBS,
    SNK.ISO_HYDRO_GEN_OBS,
    SNK.ISO_NUCLEAR_GEN_OBS,
    SNK.ISO_OIL_GEN_OBS,
    SNK.ISO_TOTAL_GEN_OBS


    FROM

    (SELECT * FROM BPB) BPB

    INNER JOIN

    (SELECT * FROM IHH) SNK

    ON SNK.BU_ISO=BPB.BU_ISO_LONG AND SNK.BU_PNODE=BPB.BU_PNODE_LONG

    INNER JOIN

    (SELECT * FROM IHH) SRC

    ON SRC.BU_ISO=BPB.BU_ISO_SHORT AND SRC.BU_PNODE=BPB.BU_PNODE_SHORT AND SRC.BU_PEAKTYPE=SNK.BU_PEAKTYPE AND SRC.MARKET_DATE=SNK.MARKET_DATE AND SRC.MARKET_HE=SNK.MARKET_HE

    LEFT JOIN

    (select * from pbm_FW)pbm

    ON
    pbm.bu_contract=bpb.bu_contract and pbm.peak_type=snk.bu_peaktype and month(pbm.flow_month)=month(snk.market_date) 
    AND PBM.BU_ISO_LONG=SNK.BU_ISO
    AND PBM.BU_ISO_SHORT=SRC.BU_ISO

    LEFT JOIN

    (SELECT * FROM PBM_HIST)PBM_HIST

    ON
    pbm_HIST.bu_contract=bpb.bu_contract and pbm_HIST.peak_type=snk.bu_peaktype and month(pbm_HIST.flow_month)=month(snk.market_date) and pbm_hist.dart_flag=pbm.dart_flag
    AND PBM_HIST.BU_ISO_LONG=SNK.BU_ISO
    AND PBM_HIST.BU_ISO_SHORT=SRC.BU_ISO
    left join

    (SELECT * FROM MISO_WIND) MISO_WIND

     ON MISO_WIND.MARKET_DATE=SNK.MARKET_DATE AND  MISO_WIND.MARKET_HE=SNK.MARKET_HE --MISO_WIND.BU_PEAKTYPE=SNK.BU_PEAKTYPE AND

)-- end of VIEW PDMART.BASIS_MACRO_ANALYSIS_VW
/* 
  SELECT * FROM  POWERDB.PDMART.BASIS_MACRO_ANALYSIS_VW WHERE BU_CONTRACT = 'PSEG/PECO' AND MARKET_DATE = '2017-10-11' 
  AND MARKET_HE = 14 AND TRADE_DATE = '2021-04-14' AND FLOW_MONTH_FW = '2021-10-01' AND PBM_DART = 'DA' AND LIQUID_YN = 'Y'
*/;"""

# query2 = str(query)

# from_tables = re.findall('FROM', query)
# inner_join_tables = re.findall('FROM', query)

# sql =  "SELECT * FROM POWERDB.PDMART.BASIS_MACRO_ANALYSIS_VW"

# # abc = parse("SELECT * FROM{}", "SELECT * FROM POWERDB.PDMART.BASIS_MACRO_ANALYSIS_VW" )
# # print(str(abc))

# ABC = sqlparse.parse(query)[0]
# # print(ABC)

# XYZ = parse("SELECT * FROM{}", ABC )
# print(XYZ)

import sqlparse
from sqlparse.sql import IdentifierList, Identifier
from sqlparse.tokens import Keyword, DML


def is_subselect(parsed):
    if not parsed.is_group:
        return False
    for item in parsed.tokens:
        if item.ttype is DML and item.value.upper() == 'SELECT':
            return True
    return False


def extract_from_part(parsed):
    from_seen = False
    for item in parsed.tokens:
        if from_seen:
            if is_subselect(item):
                yield from extract_from_part(item)
            elif item.ttype is Keyword:
                return
            else:
                yield item
        elif item.ttype is Keyword and item.value.upper() == 'FROM':
            from_seen = True


def extract_table_identifiers(token_stream):
    for item in token_stream:
        if isinstance(item, IdentifierList):
            for identifier in item.get_identifiers():
                yield identifier.get_name()
        elif isinstance(item, Identifier):
            yield item.get_name()
        # It's a bug to check for Keyword here, but in the example
        # above some tables names are identified as keywords...
        elif item.ttype is Keyword:
            yield item.value


def extract_tables(sql):
    stream = extract_from_part(sqlparse.parse(sql)[0])
    return list(extract_table_identifiers(stream))


if __name__ == '__main__':
    sql = """create or replace view POWERDB.PDMART.BASIS_MACRO_ANALYSIS_VW(
BU_ISO_LONG,
BU_ISO_SHORT,
BU_CONTRACT,
BU_PNODE_LONG,
BU_PNODE_SHORT,
LIQUID_YN,
MARKET_DATE,
MARKET_HE,
BU_PEAKTYPE,
BU_ZONE_BU_PNODE_LONG,
SNK_DA_LMP,
SNK_DA_MCC,
SNK_DA_MLC,
SNK_RT_LMP,
SNK_RT_MCC,
SNK_RT_MLC,
SNK_ICEGASHUB,
SNK_ICEGASHUB_PRICE,
SNK_SECONDARY_ICEGASHUB,
SNK_SECONDARY_ICEGASHUB_PRICE,
BU_ZONE_BU_PNODE_SHORT,
SRC_DA_LMP,
SRC_DA_MCC,
SRC_DA_MLC,
SRC_RT_LMP,
SRC_RT_MCC,
SRC_RT_MLC,
SRC_ICEGASHUB,
SRC_ICEGASHUB_PRICE,
SRC_SECONDARY_ICEGASHUB,
SRC_SECONDARY_ICEGASHUB_PRICE,
SNK_DA_ISO_LOAD,
SNK_RT_ISO_LOAD,
SNK_RT_ISO_GEN_WIND,
SNK_DA_ISO_GEN_WIND,
SRC_DA_ISO_LOAD,
SRC_RT_ISO_LOAD,
SRC_RT_ISO_GEN_WIND,
SRC_DA_ISO_GEN_WIND,
ISO_AGG_OBS_TEMP,
SNK_WEATHER_TEMPERATURE_ACTUAL,
SRC_WEATHER_TEMPERATURE_ACTUAL,
RT_MISO_GEN_WIND,
DA_MISO_GEN_WIND,
PBM_DART,
FLOW_MONTH_FW,
TRADE_DATE,
ICE_BASIS_FM,
NEX_BASIS_FM,
FLOW_MONTH_Y1,
TRADE_DATE_Y1,
ICE_BASIS_Y1,
NEX_BASIS_Y1,
BASIS_DA_LMP,
BASIS_DA_MCC,
BASIS_DA_MLC,
BASIS_RT_LMP,
BASIS_RT_MCC,
BASIS_RT_MLC,
BASIS_ICEGASHUB_PRICE_SPREAD,
BASIS_SECONDARY_ICEGASHUB_PRICE_SPREAD,
FTR_LTP_FM,
FTR_LTP_Y1,
SNK_LOAD_ZONE,
SRC_LOAD_ZONE,
IIR_ACTUAL_GAS_GEN_OUTAGE,
IIR_ACTUAL_COAL_GEN_OUTAGE,
IIR_ACTUAL_OIL_GEN_OUTAGE,
IIR_ACTUAL_NUCLEAR_GEN_OUTAGE,
IIR_ACTUAL_HYDRO_GEN_OUTAGE,
IIR_ACTUAL_WIND_GEN_OUTAGE,
IIR_ACTUAL_SOLAR_GEN_OUTAGE,
IIR_ACTUAL_TOTAL_GEN_OUTAGE,
ISO_GAS_GEN_OBS,
ISO_COAL_GEN_OBS,
ISO_HYDRO_GEN_OBS,
ISO_NUCLEAR_GEN_OBS,
ISO_OIL_GEN_OBS,
ISO_TOTAL_GEN_OBS
) as
(
WITH BPB AS (SELECT DISTINCT  BU_ISO_LONG,BU_ISO_SHORT,BU_CONTRACT,BU_PNODE_LONG,BU_PNODE_SHORT,LIQUID_YN FROM POWERDB.PDIM.BU_POWER_BASIS 
where BU_ISO_LONG||'_'||BU_ISO_SHORT in ('PJMISO_PJMISO','NYISO_PJMISO') and LIQUID_YN is not null),
IHH AS
(
SELECT DISTINCT BU_ISO,BU_PEAKTYPE,MARKET_DATE,MARKET_HE,HUB_PNODE AS BU_PNODE,BU_ZONE,DA_LMP,DA_CONG DA_MCC,DA_LOSS AS DA_MLC,RT_LMP AS RT_LMP,RT_CONG AS RT_MCC,RT_LOSS AS RT_MLC,
DA_ISO_LOAD AS DA_ISO_LOAD,RT_ISO_LOAD AS RT_ISO_LOAD,ICEGASHUB,ICEGASHUB_PRICE AS ICEGASHUB_PRICE,SECONDARY_ICEGASHUB,SECONDARY_ICEGASHUB_PRICE AS SECONDARY_ICEGASHUB_PRICE,RT_ISO_GEN_WIND as RT_ISO_GEN_WIND,DA_ISO_GEN_WIND as DA_ISO_GEN_WIND,TEMP_ISO_AGG_OBS as iso_agg_obs_temp,RT_TEMP_ACTUAL as weather_temperature_actual
,ZONAL_LOAD_RT_OBS,IIR_ACTUAL_GAS_GEN_OUTAGE,IIR_ACTUAL_COAL_GEN_OUTAGE,IIR_ACTUAL_OIL_GEN_OUTAGE,IIR_ACTUAL_NUCLEAR_GEN_OUTAGE,IIR_ACTUAL_HYDRO_GEN_OUTAGE,IIR_ACTUAL_WIND_GEN_OUTAGE,IIR_ACTUAL_SOLAR_GEN_OUTAGE,IIR_ACTUAL_TOTAL_GEN_OUTAGE
,ISO_GAS_GEN_OBS,ISO_COAL_GEN_OBS,ISO_HYDRO_GEN_OBS,ISO_NUCLEAR_GEN_OBS,ISO_OIL_GEN_OBS,ISO_TOTAL_GEN_OBS
FROM POWERDB.PDMART.ISO_HUB_HOURLY
WHERE MARKET_DATE>='2014-01-01'
--GROUP BY BU_ISO,BU_PEAKTYPE,MARKET_DATE,HUB_PNODE,ICEGASHUB,BU_ZONE
union all
SELECT DISTINCT BU_ISO,'24HR' as BU_PEAKTYPE,MARKET_DATE,MARKET_HE,HUB_PNODE AS BU_PNODE,BU_ZONE,DA_LMP,DA_CONG DA_MCC,DA_LOSS AS DA_MLC,RT_LMP AS RT_LMP,RT_CONG AS RT_MCC,RT_LOSS AS RT_MLC,
DA_ISO_LOAD AS DA_ISO_LOAD,RT_ISO_LOAD AS RT_ISO_LOAD,ICEGASHUB,ICEGASHUB_PRICE AS ICEGASHUB_PRICE,SECONDARY_ICEGASHUB,SECONDARY_ICEGASHUB_PRICE AS SECONDARY_ICEGASHUB_PRICE,RT_ISO_GEN_WIND as RT_ISO_GEN_WIND,DA_ISO_GEN_WIND as DA_ISO_GEN_WIND,TEMP_ISO_AGG_OBS as iso_agg_obs_temp,RT_TEMP_ACTUAL as weather_temperature_actual
,ZONAL_LOAD_RT_OBS,IIR_ACTUAL_GAS_GEN_OUTAGE,IIR_ACTUAL_COAL_GEN_OUTAGE,IIR_ACTUAL_OIL_GEN_OUTAGE,IIR_ACTUAL_NUCLEAR_GEN_OUTAGE,IIR_ACTUAL_HYDRO_GEN_OUTAGE,IIR_ACTUAL_WIND_GEN_OUTAGE,IIR_ACTUAL_SOLAR_GEN_OUTAGE,IIR_ACTUAL_TOTAL_GEN_OUTAGE
,ISO_GAS_GEN_OBS,ISO_COAL_GEN_OBS,ISO_HYDRO_GEN_OBS,ISO_NUCLEAR_GEN_OBS,ISO_OIL_GEN_OBS,ISO_TOTAL_GEN_OBS
FROM POWERDB.PDMART.ISO_HUB_HOURLY
WHERE MARKET_DATE>='2014-01-01' and bu_iso in ('PJMISO','NYISO') and  hub_pnode in ('HUD VL','WESTERN HUB','N.Y.C.')
),
--LATEST TRADED PRICES FOR NEXT 11 MONTHS
PBM_FW AS ( 
select a.BU_ISO_LONG,a.BU_ISO_SHORT,BU_CONTRACT,PEAK_TYPE,DART_FLAG,TRADE_DATE,FLOW_MONTH,ICE_LONG-ICE_SHORT AS ICE_BASIS_FM,NEX_LONG-NEX_SHORT AS NEX_BASIS_FM,FTR_LTP_LONG-FTR_LTP_SHORT AS FTR_LTP_FM 
FROM POWERDB.PDMART.POWER_BASIS_MONTHLY A ,
(SELECT BU_ISO_LONG,BU_ISO_SHORT, MAX(TRADE_DATE) TRADE_DATE_F FROM POWERDB.PDMART.POWER_BASIS_MONTHLY group by BU_ISO_LONG,BU_ISO_SHORT ) B
WHERE a.BU_ISO_LONG=b.BU_ISO_LONG and b.BU_ISO_SHORT=b.BU_ISO_SHORT and a.TRADE_DATE=b.TRADE_DATE_F
AND FLOW_MONTH<=DATEADD(month,11,current_date) 
),
--LAST YEARS TRADED PRICES FOR LAST YEAR SPREADS. E.G IF TODAY IS 7/29/2020 THEN WE ARE TRYING TO SEE 7/29/2019 PRICES FOR THE PERIOD 7/1/2019 TO 6/1/2020
PBM_HIST AS (
select a.BU_ISO_LONG,a.BU_ISO_SHORT,BU_CONTRACT,PEAK_TYPE,DART_FLAG,TRADE_DATE,FLOW_MONTH,ICE_LONG-ICE_SHORT AS ICE_BASIS_FM,NEX_LONG-NEX_SHORT AS NEX_BASIS_FM,FTR_LTP_LONG-FTR_LTP_SHORT AS FTR_LTP_Y1 
FROM POWERDB.PDMART.POWER_BASIS_MONTHLY A,
(SELECT BU_ISO_LONG,BU_ISO_SHORT, MAX(TRADE_DATE) TRADE_DATE_F FROM POWERDB.PDMART.POWER_BASIS_MONTHLY
WHERE TRADE_DATE<=DATEADD(YEAR,-1,CURRENT_DATE) group by BU_ISO_LONG,BU_ISO_SHORT ) B
WHERE a.BU_ISO_LONG=b.BU_ISO_LONG and b.BU_ISO_SHORT=b.BU_ISO_SHORT and a.TRADE_DATE=b.TRADE_DATE_F
AND FLOW_MONTH>=DATEADD(YEAR,-1,DATE_TRUNC(MONTH,CURRENT_DATE)) AND FLOW_MONTH<=DATEADD(month,11,DATEADD(YEAR,-1,DATE_TRUNC(MONTH,CURRENT_DATE)))
),
--taking MISO wind as MISO wind can impact power spreads AD/NI,WH/NI and other NI hub spreads
MISO_WIND as 
(
select DISTINCT MARKET_DATE,MARKET_HE,BU_PEAKTYPE,RT_ISO_GEN_WIND AS RT_MISO_GEN_WIND,DA_ISO_GEN_WIND AS DA_MISO_GEN_WIND 
FROM POWERDB.PDMART.ISO_HUB_HOURLY WHERE BU_ISO='MISO' )

--GROUP BY MARKET_DATE,BU_PEAKTYPE

--TAKING IN THE BU_ZONE TABLE TO GET YES_LOAD_ZONES
--ZONE_MAP AS
--(SELECT DISTINCT BU_ISO,BU_ZONE,ZONE_NAME,YES_ZONE,ISO_ZONE_PNODE,YES_LOAD_ZONE
--FROM POWERDB.PDIM.BU_ZONE WHERE BU_ISO='PJMISO'
--  ),
--GETTING ZONAL LOADS 
--ZONAL_LOAD AS
--(

--select * from "POWERDB"."YESDS"."ISO_DART_LOADS_OBS_HOURLY_VW"
--  WHERE ISO='PJMISO'
--)

SELECT DISTINCT BPB.*,--THERE ARE SOME DUPLICATES HERE..WILL LOOK INTO THIS AFTER NOVEMBER AUCTIONS-NEMO
SNK.MARKET_DATE,
SNK.MARKET_HE,
SNK.BU_PEAKTYPE,
SNK.BU_ZONE AS BU_ZONE_BU_PNODE_LONG,
--SNK_ZMAP.YES_LOAD_ZONE AS SNK_YES_LOAD_ZONE,
SNK.DA_LMP AS SNK_DA_LMP,
SNK.DA_MCC AS SNK_DA_MCC,
SNK.DA_MLC AS SNK_DA_MLC,
SNK.RT_LMP AS SNK_RT_LMP,
SNK.RT_MCC AS SNK_RT_MCC,
SNK.RT_MLC AS SNK_RT_MLC,
SNK.ICEGASHUB AS SNK_ICEGASHUB,
SNK.ICEGASHUB_PRICE AS SNK_ICEGASHUB_PRICE,
SNK.SECONDARY_ICEGASHUB AS SNK_SECONDARY_ICEGASHUB,
SNK.SECONDARY_ICEGASHUB_PRICE AS SNK_SECONDARY_ICEGASHUB_PRICE,
SRC.BU_ZONE AS BU_ZONE_BU_PNODE_SHORT,
--SRC_ZMAP.YES_LOAD_ZONE AS SRC_YES_LOAD_ZONE,
SRC.DA_LMP AS SRC_DA_LMP,
SRC.DA_MCC AS SRC_DA_MCC,
SRC.DA_MLC AS SRC_DA_MLC,
SRC.RT_LMP AS SRC_RT_LMP,
SRC.RT_MCC AS SRC_RT_MCC,
SRC.RT_MLC AS SRC_RT_MLC,
SRC.ICEGASHUB AS SRC_ICEGASHUB,
SRC.ICEGASHUB_PRICE AS SRC_ICEGASHUB_PRICE,
SRC.SECONDARY_ICEGASHUB AS SRC_SECONDARY_ICEGASHUB,
SRC.SECONDARY_ICEGASHUB_PRICE AS SRC_SECONDARY_ICEGASHUB_PRICE,
SNK.DA_ISO_LOAD as SNK_DA_ISO_LOAD, 
SNK.RT_ISO_LOAD as SNK_RT_ISO_LOAD,
SNK.RT_ISO_GEN_WIND as SNK_RT_ISO_GEN_WIND,  
SNK.DA_ISO_GEN_WIND as SNK_DA_ISO_GEN_WIND,
SRC.DA_ISO_LOAD as SRC_DA_ISO_LOAD,
SRC.RT_ISO_LOAD as SRC_RT_ISO_LOAD,
SRC.RT_ISO_GEN_WIND as SRC_RT_ISO_GEN_WIND,
SRC.DA_ISO_GEN_WIND as SRC_DA_ISO_GEN_WIND,
--SNK_LOAD.RTLOAD AS SNK_RT_LOAD,
--SNK_LOAD.DALOAD AS SNK_DA_LOAD,
--SRC_LOAD.RTLOAD AS SRC_RT_LOAD,
--SRC_LOAD.DALOAD AS SRC_DA_LOAD,
SNK.iso_agg_obs_temp,
SNK.weather_temperature_actual AS SNK_WEATHER_TEMPERATURE_ACTUAL,
SRC.weather_temperature_actual AS SRC_WEATHER_TEMPERATURE_ACTUAL,
MISO_WIND.RT_MISO_GEN_WIND,
MISO_WIND.DA_MISO_GEN_WIND,
pbm.dart_FLAG as pbm_dart,
pbm.flow_month as FLOW_MONTH_FW,
PBM.TRADE_DATE,
PBM.ICE_BASIS_FM,
PBM.NEX_BASIS_FM,
pbm_HIST.flow_month as FLOW_MONTH_Y1,
PBM_HIST.TRADE_DATE AS TRADE_DATE_Y1,
PBM_HIST.ICE_BASIS_FM AS ICE_BASIS_Y1,
PBM_HIST.NEX_BASIS_FM AS NEX_BASIS_Y1,
SNK_DA_LMP-SRC_DA_LMP AS BASIS_DA_LMP,
SNK_DA_MCC-SRC_DA_MCC AS BASIS_DA_MCC,
SNK_DA_MLC-SRC_DA_MLC AS BASIS_DA_MLC,
SNK_RT_LMP-SRC_RT_LMP AS BASIS_RT_LMP,
SNK_RT_MCC-SRC_RT_MCC AS BASIS_RT_MCC,
SNK_RT_MLC-SRC_RT_MLC AS BASIS_RT_MLC,
SNK_ICEGASHUB_PRICE-SRC_ICEGASHUB_PRICE AS BASIS_ICEGASHUB_PRICE_SPREAD,
SNK_SECONDARY_ICEGASHUB_PRICE-SRC_SECONDARY_ICEGASHUB_PRICE AS BASIS_SECONDARY_ICEGASHUB_PRICE_SPREAD,
PBM.FTR_LTP_FM,
PBM_HIST.FTR_LTP_Y1,
SNK.ZONAL_LOAD_RT_OBS AS SNK_LOAD_ZONE,
SRC.ZONAL_LOAD_RT_OBS AS SRC_LOAD_ZONE,
SNK.IIR_ACTUAL_GAS_GEN_OUTAGE,
SNK.IIR_ACTUAL_COAL_GEN_OUTAGE,
SNK.IIR_ACTUAL_OIL_GEN_OUTAGE,
SNK.IIR_ACTUAL_NUCLEAR_GEN_OUTAGE,
SNK.IIR_ACTUAL_HYDRO_GEN_OUTAGE,
SNK.IIR_ACTUAL_WIND_GEN_OUTAGE,
SNK.IIR_ACTUAL_SOLAR_GEN_OUTAGE,
SNK.IIR_ACTUAL_TOTAL_GEN_OUTAGE,
SNK.ISO_GAS_GEN_OBS,
SNK.ISO_COAL_GEN_OBS,
SNK.ISO_HYDRO_GEN_OBS,
SNK.ISO_NUCLEAR_GEN_OBS,
SNK.ISO_OIL_GEN_OBS,
SNK.ISO_TOTAL_GEN_OBS


FROM

(SELECT * FROM BPB) BPB

INNER JOIN

(SELECT * FROM IHH) SNK

ON SNK.BU_ISO=BPB.BU_ISO_LONG AND SNK.BU_PNODE=BPB.BU_PNODE_LONG

INNER JOIN

(SELECT * FROM IHH) SRC

ON SRC.BU_ISO=BPB.BU_ISO_SHORT AND SRC.BU_PNODE=BPB.BU_PNODE_SHORT AND SRC.BU_PEAKTYPE=SNK.BU_PEAKTYPE AND SRC.MARKET_DATE=SNK.MARKET_DATE AND SRC.MARKET_HE=SNK.MARKET_HE

LEFT JOIN

(select * from pbm_FW)pbm

ON
pbm.bu_contract=bpb.bu_contract and pbm.peak_type=snk.bu_peaktype and month(pbm.flow_month)=month(snk.market_date) 
AND PBM.BU_ISO_LONG=SNK.BU_ISO
AND PBM.BU_ISO_SHORT=SRC.BU_ISO

LEFT JOIN

(SELECT * FROM PBM_HIST)PBM_HIST

ON
pbm_HIST.bu_contract=bpb.bu_contract and pbm_HIST.peak_type=snk.bu_peaktype and month(pbm_HIST.flow_month)=month(snk.market_date) and pbm_hist.dart_flag=pbm.dart_flag
AND PBM_HIST.BU_ISO_LONG=SNK.BU_ISO
AND PBM_HIST.BU_ISO_SHORT=SRC.BU_ISO
left join

(SELECT * FROM MISO_WIND) MISO_WIND

ON MISO_WIND.MARKET_DATE=SNK.MARKET_DATE AND  MISO_WIND.MARKET_HE=SNK.MARKET_HE --MISO_WIND.BU_PEAKTYPE=SNK.BU_PEAKTYPE AND

)"""

    tables = ', '.join(extract_tables(sql))
    print('Tables: {}'.format(tables))


